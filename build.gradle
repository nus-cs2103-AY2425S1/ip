plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

checkstyle {
    toolVersion = '10.2'
}

repositories {
    mavenCentral()
}

dependencies {
    String javaFxVersion = '17.0.11'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    implementation "org.openjfx:javafx-base:${javaFxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-controls:${javaFxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-fxml:${javaFxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:mac-aarch64"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'hannah.Launcher'  // Update with your main class
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Handle duplicate entries
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("hannah.Launcher")
}

shadowJar {
    archiveBaseName = "hannah"
    archiveClassifier = null
}

run{
    standardInput = System.in
}