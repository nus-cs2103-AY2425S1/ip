plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.AZUL
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

checkstyle {
    toolVersion = '10.12.3'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    String javaFxVersion = '17.0.7'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
//    For local testing
//    def javaFxVersion = '17.0.7'
//    def os = System.getProperty('os.name').toLowerCase()
//    def platform = os.contains('mac') ? 'mac-aarch64' : os.contains('windows') ? 'win' : 'linux'
//    implementation "org.openjfx:javafx-base:${javaFxVersion}:${platform}"
//    implementation "org.openjfx:javafx-controls:${javaFxVersion}:${platform}"
//    implementation "org.openjfx:javafx-fxml:${javaFxVersion}:${platform}"
//    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:${platform}"
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("sadcat.SadCat")
}

shadowJar {
    archiveBaseName = "sadcat"
    archiveFileName = "sadcat.jar"
    archiveClassifier = null
}

run {
    standardInput = System.in
}