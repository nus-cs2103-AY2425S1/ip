name: Java CI

on: [push, pull_request]

jobs:
  # Build Stage
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set up repository
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          java-package: jdk+fx

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build the project
        run: ./gradlew build

  # Test Stage
  test:
    needs: build  # This ensures the test stage runs after the build stage
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set up repository
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          java-package: jdk+fx

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run checkstyleMain
        run: ./gradlew checkstyleMain

      - name: Run checkstyleTest
        run: ./gradlew checkstyleTest

      - name: Run all tests in the duke package
        run: |
          # Find all test classes recursively in src/test/java/duke and run them
          find ./src/test/java/duke -name '*Test.java' | while read test; do
            ./gradlew test --tests $(basename "${test}" .java)
          done
