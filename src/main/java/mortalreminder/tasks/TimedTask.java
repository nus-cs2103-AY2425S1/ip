package mortalreminder.tasks;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

// the JavaDocs for this class and its methods were autogenerated by ChatGPT

/**
 * Represents a task that is associated with a specific time or due date.
 * <p>
 * This interface provides methods to retrieve the due date of the task,
 * parse a time from a string, and convert a {@link LocalDateTime} object
 * to a formatted string.
 */
public interface TimedTask {

    /**
     * Retrieves the due date of this task.
     *
     * @return the due date as a {@link LocalDateTime} object.
     */
    LocalDateTime getDueDate();

    /**
     * Parses a string to obtain the {@link LocalDateTime} of the task.
     * <p>
     * The string should follow the format "dd-MM-yyyy HHmm", where:
     * <ul>
     *     <li>dd: day of the month</li>
     *     <li>MM: month of the year</li>
     *     <li>yyyy: year</li>
     *     <li>HHmm: time in 24-hour format</li>
     * </ul>
     *
     * @param descriptionString the string containing the date and time information.
     * @return the corresponding {@link LocalDateTime} object.
     */
    default LocalDateTime getTime(String descriptionString) {
        DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HHmm");
        return LocalDateTime.parse(descriptionString, inputFormatter);
    }

    /**
     * Converts a {@link LocalDateTime} object to a formatted string.
     * <p>
     * The returned string will be in the format "dd MMM yyyy h:mm a", where:
     * <ul>
     *     <li>dd: day of the month</li>
     *     <li>MMM: abbreviated month name</li>
     *     <li>yyyy: year</li>
     *     <li>h:mm a: time in 12-hour format with AM/PM</li>
     * </ul>
     * The method was debugged using ChatGPT after testing on different platforms.
     *
     * @param time the {@link LocalDateTime} object to be formatted.
     * @return the formatted date and time string.
     */
    default String convertTimeToString(LocalDateTime time) {
        DateTimeFormatter outputFormatter = DateTimeFormatter.ofPattern("dd MMM yyyy h:mm a",
                Locale.forLanguageTag("en-GB"));
        return time.format(outputFormatter);
    }

}
