package barcus.command;

import barcus.exception.BarcusException;
import barcus.storage.Storage;
import barcus.tasklist.TaskList;

/**
 * Abstract command class
 */
public abstract class Command {
    /**
     * The output message generated by the command after execution.
     */
    protected String output;

    /**
     * Executes the command, modifying the task list and storage as necessary.
     *
     * @param tasks the task list that the command will modify
     * @param storage the storage object to save the task list state
     * @throws BarcusException if there is an error during the execution of the command
     */
    public abstract void execute(TaskList tasks, Storage storage) throws BarcusException;

    /**
     * Indicates whether this command causes the application to exit.
     *
     * @return true if the command results in the application exiting, false otherwise
     */
    public abstract boolean isExit();

    /**
     * Retrieves the output message generated by the command.
     *
     * @return the output message
     * @throws AssertionError if the output message is empty
     */
    public String getString() {
        assert !output.isEmpty();
        return output;
    };
}
