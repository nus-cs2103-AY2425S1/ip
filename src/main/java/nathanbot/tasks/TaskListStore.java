/**
 * This code has been refined with the assistance of Copilot to comply with the Java Style Guide.
 * Documentation comments have been generated by Copilot.
 * For further information, please refer to the Ai.md.
 */
package nathanbot.tasks;

import nathanbot.storage.Storage;

/**
 * Manages a list of tasks with storage capabilities.
 */
public class TaskListStore extends TaskList {
    private final Storage storage;

    /**
     * Constructs a TaskListStore with the specified storage.
     *
     * @param storage The storage to be used for loading and saving tasks.
     */
    public TaskListStore(Storage storage) {
        super();
        this.storage = storage;
        this.taskList.addAll(storage.loadTasksFromFile());
    }

    /**
     * Adds a task to the task list and saves the updated list to storage.
     *
     * @param task The task to be added.
     */
    @Override
    public void addTask(Task task) {
        super.addTask(task);
        storage.saveTasksToFile(taskList);
    }

    /**
     * Marks the task at the specified index as done and saves the updated list to storage.
     *
     * @param index The index of the task to be marked as done.
     */
    @Override
    public void markAsDone(int index) {
        super.markAsDone(index);
        storage.saveTasksToFile(taskList);
    }

    /**
     * Marks the task at the specified index as undone and saves the updated list to storage.
     *
     * @param index The index of the task to be marked as undone.
     */
    @Override
    public void markAsUndone(int index) {
        super.markAsUndone(index);
        storage.saveTasksToFile(taskList);
    }

    /**
     * Tags a task at the specified index.
     *
     * @param index The index of the task to be tagged.
     * @param tag The desired tag of the task.
     */
    @Override
    public void tagTask(int index, String tag) {
        taskList.get(index).setTag(tag);
        storage.saveTasksToFile(taskList);
    }

    /**
     * Deletes the task at the specified index and saves the updated list to storage.
     *
     * @param index The index of the task to be deleted.
     */
    @Override
    public void deleteTask(int index) {
        super.deleteTask(index);
        storage.saveTasksToFile(taskList);
    }
}
