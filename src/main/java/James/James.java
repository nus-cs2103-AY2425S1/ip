package james;

import java.util.ArrayList;

/**
 * Manages the interaction between the user, task storage, and task operations.
 * <p>
 * Initializes the UI, storage, task list, and parser. Handles user commands
 * and controls the flow of the application.
 * </p>
 */
class James {
    private Ui ui;
    private Storage storage;
    private TaskList taskList;
    private Parser parser;

    /**
     * Creates a new James instance with the specified file path.
     *
     * @param filepath Path to the file where tasks are stored
     */
    public James(String filepath) {
        ui = new Ui();
        storage = new Storage(filepath);
        taskList = new TaskList(new ArrayList<>());
        parser = new Parser(ui, storage);

        storage.loadSavedData(taskList.getTasks());
    }

    /**
     * Processes the user's input and returns the appropriate response.
     *
     * This method takes the user's input, processes it using the parser to execute
     * commands on the task list, and returns the corresponding response. If an exception
     * specific to the application (JamesException) occurs during processing, the error message
     * from the exception is returned instead.
     *
     * @param input The user's input command as a string.
     * @return The response generated by executing the user's command. If a
     *         JamesException occurs, returns the exception's error message.
     */
    public String getResponse(String input) {
        String response;
        try {
            response = parser.parseAndExecute(input, taskList);
        } catch (JamesException e) {
            return e.getMessage();
        }
        return response;
    }
}
