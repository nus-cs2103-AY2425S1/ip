/**
 * The Parser class deals with making sense of the user command.
 */
public class Parser {
    /**
     * Parses the task number from the user's command.
     *
     * @param userCommand The command entered by the user.
     * @return The parsed user command.
     */
    public static String parseCommand(String userCommand) {
        String[] userInputs = userCommand.split(" ");
        return userInputs[0].toLowerCase().trim();
    }

    /**
     * Parses the task name from the user's command.
     *
     * @param userCommand The command entered by the user.
     * @return message The message generated by the addTask function in TaskList.
     */
    public static String parseToDoTask(String userCommand) {
        String[] userInputs = userCommand.split(" ");
        String taskName = userInputs[1];
        String message = TaskList.addTask(taskName);
        return message;
    }

    /**
     * Parses the task name and deadline from the user's command.
     *
     * @param userCommand The command entered by the user.
     * @return message The message generated by the addTask function in TaskList.
     */
    public static String parseDeadlineTask(String userCommand) {
        String[] userInputs = userCommand.split("/");

        String taskName = userInputs[0].substring(9, userInputs[0].length());
        String deadline = userInputs[1].substring(3, userInputs[1].length());
        String message = TaskList.addTask(taskName, deadline);
        return message;
    }

    /**
     * Parses the task name, start date time and end date time from the user's
     * command.
     *
     * @param userCommand The command entered by the user.
     * @return message The message generated by the addTask function in TaskList.
     */
    public static String parseEventTask(String userCommand) {
        String[] userInputs = userCommand.split("/");

        String taskName = userInputs[0].substring(6, userInputs[0].length());
        String startDateTime = userInputs[1].substring(5, userInputs[1].length());
        String endDateTime = userInputs[2].substring(3, userInputs[2].length());

        String message = TaskList.addTask(taskName, startDateTime, endDateTime);
        return message;
    }

    /**
     * Parses the task number from the user's command.
     *
     * @param userCommand The command entered by the user.
     * @return The parsed task number.
     * @throws Exception If the task number is invalid.
     */
    public static int parseTaskNumber(String userCommand) throws Exception {
        try {
            String command = parseCommand(userCommand);
            return Integer.parseInt(userCommand.substring(command.length() + 1).trim()) - 1;
        } catch (NumberFormatException e) {
            throw new Exception("Please enter a valid task number!");
        }
    }
}
