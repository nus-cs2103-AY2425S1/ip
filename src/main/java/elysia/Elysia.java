package elysia;

import java.io.IOException;
import java.util.ArrayList;

import elysia.command.Command;
import elysia.exception.ElysiaException;
import elysia.exception.InvalidFileFormatException;
import elysia.parser.Parser;
import elysia.storage.Storage;
import elysia.task.Task;
import elysia.ui.Ui;

/**
 * Initializes the Elysia chatbot application by setting up storage and loading tasks. Throws an IOException if there is
 * an error loading the storage.
 *
 * @throws IOException If there is an error accessing the storage.
 */
public class Elysia {
    private ArrayList<Task> tasks = new ArrayList<>();
    private Storage storage;

    private boolean isExit = false;

    public Elysia() {
        storage = new Storage(tasks);
    }

    /**
     * Generates a response based on the user's input. Parses the input to determine the command and then executes the
     * command to generate a response.
     *
     * @param input The user's chat message.
     * @return The response generated by executing the command derived from the input.
     * @throws ElysiaException If there is an error related to the Elysia commands or operations.
     * @throws IOException     If there is an error accessing the storage during command execution.
     */
    public String getResponse(String input) {

        try {
            Parser parser = new Parser();
            Command command = parser.parseCommand(input, this.tasks.size());
            assert command != null : "command is null";
            this.isExit = command.isExit();

            return command.execute(tasks);
        } catch (ElysiaException | IOException e) {
            return e.getMessage();
        }
    }

    public String getFirstMessage() {
        try {
            storage.load();
        } catch (InvalidFileFormatException | IOException e) {
            return e.getMessage();
        }

        Ui ui = new Ui();
        return ui.getWelcomeMessage();
    }

    public boolean isExit() {
        return this.isExit;
    }
}
