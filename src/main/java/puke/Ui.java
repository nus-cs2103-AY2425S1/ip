package puke;

import java.util.Objects;
import java.util.Scanner;

import puke.exceptions.PukeException;
import puke.message.MessageBuilder;

/**
 * Handles the user interface, including input parsing and message display.
 * The Ui class interacts with the user by displaying messages, processing user input,
 * and delegating command handling to the Parser.
 */
public class Ui {
    private MessageBuilder messageBuilder;
    private Parser parser;

    /**
     * Constructs a Ui instance with the specified Parser and MessageBuilder.
     *
     * @param parser the Parser to handle user commands
     * @param messageBuilder the MessageBuilder to construct and display messages
     */
    public Ui(Parser parser, MessageBuilder messageBuilder) {
        this.messageBuilder = messageBuilder;
        this.parser = parser;
    }

    /**
     * Starts the user interface, displaying the greeting message and processing user input.
     * Continuously reads user input from the console until the user types "bye",
     * at which point the user interface is terminated.
     *
     * @throws PukeException if an error occurs while parsing user input
     */
    public void start() throws PukeException {
        messageBuilder.sendGreetingMessage();
        Scanner scanner = new Scanner(System.in);
        String userInput;

        while (true) {
            userInput = scanner.nextLine();
            if (userInput.trim().equalsIgnoreCase("bye")) {
                break;
            }
            parser.handleInput(userInput);
        }

        terminate();
        scanner.close();
    }

    /**
     * Processes the provided user input and returns a response.
     * If the input is "bye", terminates the interface and returns the goodbye message.
     * Otherwise, processes the input using the parser.
     *
     * @param userInput the user input to be processed
     * @return the response message generated by the parser or the goodbye message
     */
    public String start(String userInput) {
        if (Objects.equals(userInput, "bye")) {
            return terminate();
        } else {
            return parser.handleInput(userInput);
        }
    }

    /**
     * Terminates the user interface, displaying the goodbye message.
     *
     * @return the goodbye message
     */
    private String terminate() {
        return messageBuilder.sendGoodbyeMessage();
    }

    /**
     * Retrieves the greeting message from the MessageBuilder.
     *
     * @return the greeting message
     */
    public String getGreetingFromMessageBuilder() {
        return messageBuilder.sendGreetingMessage();
    }
}
