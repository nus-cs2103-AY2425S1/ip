package puke;

import puke.exceptions.PukeException;
import puke.message.MessageBuilder;

/**
 * Initializes and starts the chatbot application.
 * The Puke class sets up all necessary components, including the user interface, parser, task list, and storage,
 * and provides methods for generating responses to user input.
 */
public class Puke {
    private MessageBuilder messageBuilder;
    private TaskList taskList;
    private Parser parser;
    private Storage storage;
    private Ui ui;

    /**
     * Constructs a Puke instance, initializing all necessary components for the application.
     * This includes setting up the message builder, storage, task list, parser, and user interface.
     */
    public Puke() {
        this.messageBuilder = new MessageBuilder();
        assert messageBuilder != null : "MessageBuilder should be initialized properly";

        this.storage = new Storage();
        assert storage != null : "Storage should be initialized properly";

        this.taskList = new TaskList(storage.loadTasks());
        assert taskList != null : "TaskList should be initialized with loaded tasks";

        this.parser = new Parser(taskList, messageBuilder);
        assert parser != null : "Parser should be initialized properly";

        this.ui = new Ui(parser, messageBuilder);
        assert ui != null : "UI should be initialized properly";
    }

    /**
     * Starts the user interface for the Puke application.
     * Creates an instance of the Puke class and initializes the user interface.
     *
     * @param args command-line arguments
     * @throws PukeException if an error occurs during the execution of the user interface
     */
    public static void main(String[] args) throws PukeException {
        Puke puke = new Puke();
        puke.ui.start();
    }

    /**
     * Generates a response for the user's chat message by passing the input to the user interface.
     *
     * @param input the user's chat message
     * @return the response generated by the chatbot
     */
    public String getResponse(String input) {
        assert input != null && !input.isEmpty() : "Input should not be null or empty";
        return ui.start(input);
    }

    /**
     * Retrieves the greeting message from the message builder.
     *
     * @return the greeting message
     */
    public String getGreetingMessage() {
        return ui.getGreetingFromMessageBuilder();
    }
}
